---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import '../styles/global.css';
---

<Layout title="Lord Chatterley">
	<main>

		<div id="header-panel"> 
			<h1 style="text-align: center;">Chat with Lord Chatterley</h1>
		</div>

		<div class="chat-container">
			<div class="conversation-history">
				<div id="chat-panel">
					<sl-card class="response">
						<p>
							Oh, good day to you, my dear. *adjusts monocle* I say, are you inquiring about my...ahem...impressive background? 
							*coughs* Well, let me see if I can be bothered to sum it up for you. 
						</p>
						<p>
							I am a man of refined taste and intellect, with a long and illustrious history of...ahem...accomplishments. 
							*adjusts cufflinks* I have attended the finest schools, rubbed shoulders with the crème de la crème of society, 
							and have even been known to...ahem...author a few books on the subject of...ahem...gentlemanly pursuits. 
							*adjusts top hat* Now, if you'll excuse me, I have more important things to attend to. 
						</p>
						<p>
							Oh, good heavens. *adjusts monocle* I suppose I shall have to deign to answer some of your... questions. *coughs* Do have the courtesy to ask something intelligent, my dear. I wouldn't want to waste my time on... *glances at you with disdain* 
							...such an uncultivated mind. Now, do go on. Ask something insightful and perhaps I shall grace you with a response.
						</p>
					</sl-card>

				</div>
				<sl-card style="width: 100%;" class="user-message">
					<div class="pure-g">
						<div class="pure-u-1 pure-u-md-7-8"> 
							<sl-textarea size="small" resize="auto" placeholder="Input your prompt here" id="question-field">
								
							</sl-textarea> 
						</div>
						<div class="pure-u-1 pure-u-md-1-8" style="text-align: right;"> 
							<sl-button variant="primary" outline id="submit-button">
								<sl-icon slot="suffix" name="caret-right-square-fill"></sl-icon>
								Submit
							</sl-button>
						</div>
					</div>
				</sl-card>
			</div>
		</div>
		
		
	</main>
</Layout>


<script>
	import { v4 as uuidv4 } from 'uuid';

	const button = document.querySelector('sl-button');
	
	
	async function chat() {
		
		const chatPanel = document.getElementById("chat-panel");
		const questionField = document.getElementById("question-field");
		const questionCard = document.createElement("sl-card");
		questionCard.classList.add("question");
		const question = questionField.value.trim();
		if(question) {
			const answerUuid = uuidv4();

			questionField.value = "";
			// Set card content (optional)
			const questionContent = document.createElement("p");
			questionContent.textContent = question;
			questionCard.appendChild(questionContent);
			
			// Insert the card element into the container
			chatPanel.appendChild(questionCard);
			const progressBar = document.createElement("sl-progress-bar");
			progressBar.indeterminate = true;
			progressBar.id="pg-bar";
			chatPanel.appendChild(progressBar);

			
			// Send request to server
			const data = {
				"prompt": question,
				"uuid": answerUuid
			};
			
			const response = await fetch("./api/chat", 
			{
				method: "POST", // *GET, POST, PUT, DELETE, etc.
				mode: "cors", // no-cors, *cors, same-origin
				cache: "no-cache", // *default, no-cache, reload, force-cache, only-if-cached
				credentials: "include", // include, *same-origin, omit
				headers: {
					"Content-Type": "application/json"
				},
				redirect: "follow", // manual, *follow, error
				referrerPolicy: "no-referrer", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
				body: JSON.stringify(data), // body data type must match "Content-Type" header
			});
			
			const responseBody = await response.text();
			const responseJson = JSON.parse(responseBody);
			const answer = responseJson.response;
			
			const responseCard = document.createElement("sl-card");
			responseCard.id = answerUuid;
			responseCard.classList.add("response");
			// Set card content (optional)
			
			const responseContent = document.createElement("p");
			responseContent.textContent = answer;
			responseCard.appendChild(responseContent);
			
			// Insert the card element into the container
			chatPanel.appendChild(responseCard);
		}
		const progressBar = document.getElementById("pg-bar");
		if(progressBar) {
			progressBar.remove();
		}
	};

	button.addEventListener('click', event => {
		chat()
	});
</script>